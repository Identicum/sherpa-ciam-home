services:
    db:
        container_name: db
        image: ghcr.io/identicum/postgres:16
        restart: always
        pull_policy: always
        ports:
            - 5432:5432
        environment:
            POSTGRES_PASSWORD: postgrespwd
        volumes:
            - ./postgres-initdb/:/docker-entrypoint-initdb.d/

    mailcatcher:
        container_name: mailcatcher
        image: ghcr.io/identicum/mailcatcher:latest
        pull_policy: always
        restart: always
        ports:
            - 1080:1080

    idp:
        container_name: idp
        image: ghcr.io/identicum/keycloak:26.1
        restart: always
        ports:
            - 8080:8080
        environment:
            KC_BOOTSTRAP_ADMIN_USERNAME: admin
            KC_BOOTSTRAP_ADMIN_PASSWORD: admin
            KC_DB: postgres
            KC_DB_URL: jdbc:postgresql://db/keycloakdb
            KC_DB_USERNAME: keycloakusr
            KC_DB_PASSWORD: keycloakpwd
        depends_on:
            db:
                condition: service_healthy

    idp_setup:
        container_name: idp_setup
        image: ghcr.io/identicum/sherpa-deploy:latest
        pull_policy: always
        environment:
            - LOG_LEVEL=TRACE
        volumes:
            - ../app/:/app/
            - ./data/:/data/
            - ./local.properties:/local.properties
            - ./objects/:/terraform-objects/
        command: "python3 /terraform-objects/local_apply.py"
        depends_on:
            idp:
                condition: service_healthy
            mailcatcher:
                condition: service_healthy

    home:
        container_name: home
        image: ghcr.io/identicum/sherpa-ciam-home:latest
        # pull_policy: always
        ports:
            - 80:5000
        env_file:
            - ./home.secrets
        environment:
            - LOG_LEVEL=DEBUG
        volumes:
            - ../app/:/app/
            - ./data/:/data/
            - ./local.properties:/local.properties
            - ./objects/:/terraform-objects/
        depends_on:
            idp_setup:
                condition: service_completed_successfully

